apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-replica
  labels:
    app: mysql-replica

spec:
  revisionHistoryLimit: 3
  replicas: 3
  serviceName: "mysql-svc"
  selector:
    matchLabels:
      app: mysql-replica
  updateStrategy:
    type: RollingUpdate
  minReadySeconds: 15
  template:
    metadata:
      labels:
        app: mysql-replica
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql-replica
        image: mysql:8.0.33
        resources:
          limits:
            cpu: 512m
          requests:
            cpu: 312m
        ports:
        - containerPort: 3306
        envFrom:
        - secretRef:
           name: mysql-secret

        command:
        - /bin/sh
        - -c
        - |
          /initial-script/mysql-script.sh &
          docker-entrypoint.sh mysqld --binlog_transaction_dependency_tracking=WRITESET --enforce_gtid_consistency=ON --gtid_mode=ON --binlog-checksum=NONE --server_id=$((${HOSTNAME:14}+1)) --report-host=${HOSTNAME}.mysql-svc --sql-generate-invisible-primary-key;

        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                mysqlsh -h mysql-router -P 6446 -u root -p${MYSQL_ROOT_PASSWORD} -e 'dba.getCluster().rescan({ interactive:false, addInstances:"auto", removeInstances:"auto" })'

        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-script
          mountPath: /initial-script

      volumes:
        - name: mysql-script
          configMap:
            name: mysql-script
            defaultMode: 0777

  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "mysql-sc"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: mysql-sc
      resources:
        requests:
          storage: 5Gi